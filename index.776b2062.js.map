{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,EAAO,SAAS,aAAa,CAAC,MAWpC,SAAS,EAAsB,CAAW,EACxC,OAAO,OAAO,EAAY,OAAO,CAAC,QAAS,IAC7C,CAkBA,IAAM,EA3BG,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAHa,SAAS,gBAAgB,CAAC,mB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAG5B,IAAI,CACpB,SAAC,CAAA,CAAG,CADN,EAEI,OAAA,EAAsB,EAAE,UAAU,CAAC,cAAc,CAAC,KAAK,EACvD,EAAsB,EAAE,UAAU,CAAC,cAAc,CAAC,KAAK,C,GA0B7D,EAAW,OAAO,CAAC,SAAC,CAApB,EACE,EAAK,WAAW,CAAC,EACnB,GAnBS,AAqBI,EArBO,GAAG,CAAC,SAAC,CAAvB,EAME,MAAO,CACL,KANmB,EAAK,SAAS,CAOjC,SANe,EAAK,UAAU,CAAC,gBAAgB,CAAC,KAAK,CAOrD,OANa,EAAK,UAAU,CAAC,cAAc,CAAC,KAAK,CAOjD,IANU,EAAK,UAAU,CAAC,WAAW,CAAC,KAAK,AAO7C,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar list = document.querySelector(\"ul\");\nvar listItems = _to_consumable_array(document.querySelectorAll(\"[data-salary]\"));\nfunction sortList(sourceList) {\n    return sourceList.sort(function(a, b) {\n        return convertSalaryToNumber(b.attributes[\"data-salary\"].value) - convertSalaryToNumber(a.attributes[\"data-salary\"].value);\n    });\n}\nfunction convertSalaryToNumber(salaryValue) {\n    return Number(salaryValue.replace(/[,$]/g, \"\"));\n}\nfunction getEmployees(sourceList) {\n    return sourceList.map(function(item) {\n        var employeeName = item.innerText;\n        var position = item.attributes[\"data-position\"].value;\n        var salary = item.attributes[\"data-salary\"].value;\n        var age = item.attributes[\"data-age\"].value;\n        return {\n            name: employeeName,\n            position: position,\n            salary: salary,\n            age: age\n        };\n    });\n}\nvar sortedList = sortList(listItems);\nsortedList.forEach(function(item) {\n    list.appendChild(item);\n});\ngetEmployees(sortedList);\n\n//# sourceMappingURL=index.776b2062.js.map\n","'use strict';\n\nconst list = document.querySelector('ul');\nconst listItems = [...document.querySelectorAll('[data-salary]')];\n\nfunction sortList(sourceList) {\n  return sourceList.sort(\n    (a, b) =>\n      convertSalaryToNumber(b.attributes['data-salary'].value) -\n      convertSalaryToNumber(a.attributes['data-salary'].value),\n  );\n}\n\nfunction convertSalaryToNumber(salaryValue) {\n  return Number(salaryValue.replace(/[,$]/g, ''));\n}\n\nfunction getEmployees(sourceList) {\n  return sourceList.map((item) => {\n    const employeeName = item.innerText;\n    const position = item.attributes['data-position'].value;\n    const salary = item.attributes['data-salary'].value;\n    const age = item.attributes['data-age'].value;\n\n    return {\n      name: employeeName,\n      position,\n      salary,\n      age,\n    };\n  });\n}\n\nconst sortedList = sortList(listItems);\n\nsortedList.forEach((item) => {\n  list.appendChild(item);\n});\n\ngetEmployees(sortedList);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","list","document","querySelector","convertSalaryToNumber","salaryValue","Number","replace","sortedList","sourceList","_array_without_holes","isArray","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","a","b","attributes","value","forEach","item","appendChild","map","innerText","position","salary","age"],"version":3,"file":"index.776b2062.js.map"}